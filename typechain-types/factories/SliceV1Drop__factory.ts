/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SliceV1Drop, SliceV1DropInterface } from "../SliceV1Drop";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "slxAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sliceCoreAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Invalid",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "_setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "_setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tempURI_",
        type: "string",
      },
    ],
    name: "_setTempURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200216538038062002165833981016040819052620000349162000321565b8181878781600090805190602001906200005092919062000191565b5080516200006690600190602084019062000191565b5050600680546001600160a01b0319166001600160a01b039490941693909317909255608052506200009f620000993390565b6200013f565b6001600160a01b0384811660a052604051630bafd3f560e11b8152600481018390529084169063175fa7ea90602401602060405180830381865afa158015620000ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001129190620003cb565b600980546001600160a01b0319166001600160a01b0392909216919091179055506200042c945050505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200019f90620003f0565b90600052602060002090601f016020900481019282620001c357600085556200020e565b82601f10620001de57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020e578251825591602001919060010190620001f1565b506200021c92915062000220565b5090565b5b808211156200021c576000815560010162000221565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025f57600080fd5b81516001600160401b03808211156200027c576200027c62000237565b604051601f8301601f19908116603f01168101908282118183101715620002a757620002a762000237565b81604052838152602092508683858801011115620002c457600080fd5b600091505b83821015620002e85785820183015181830184015290820190620002c9565b83821115620002fa5760008385830101525b9695505050505050565b80516001600160a01b03811681146200031c57600080fd5b919050565b60008060008060008060c087890312156200033b57600080fd5b86516001600160401b03808211156200035357600080fd5b620003618a838b016200024d565b975060208901519150808211156200037857600080fd5b506200038789828a016200024d565b955050620003986040880162000304565b9350620003a86060880162000304565b9250620003b86080880162000304565b915060a087015190509295509295509295565b600060208284031215620003de57600080fd5b620003e98262000304565b9392505050565b600181811c908216806200040557607f821691505b6020821081036200042657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611d13620004526000396000610b4f0152600061104e0152611d136000f3fe6080604052600436106101405760003560e01c8063715018a6116100b6578063a22cb4651161006f578063a22cb465146103cc578063b88d4fde146103ec578063c87b56dd1461040c578063e985e9c51461042c578063ea0875ea14610467578063f2fde38b1461048757600080fd5b8063715018a6146103315780638da5cb5b1461034657806395d89b411461036457806395db93681461037957806396238af81461039957806399543438146103ac57600080fd5b806323b872dd1161010857806323b872dd1461022f5780632a55205a1461024f57806331b5b9071461028e57806342842e0e146102ae5780636352211e146102ce57806370a082311461030457600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101ea57806318160ddd1461020c575b600080fd5b34801561015157600080fd5b506101656101603660046114b9565b6104a7565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f6104f9565b6040516101719190611535565b3480156101a857600080fd5b506101d26101b7366004611548565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610171565b3480156101f657600080fd5b5061020a610205366004611576565b610587565b005b34801561021857600080fd5b5061022161066e565b604051908152602001610171565b34801561023b57600080fd5b5061020a61024a3660046115a2565b61067e565b34801561025b57600080fd5b5061026f61026a3660046115e3565b610845565b604080516001600160a01b039093168352602083019190915201610171565b34801561029a57600080fd5b5061020a6102a93660046116b2565b61086c565b3480156102ba57600080fd5b5061020a6102c93660046115a2565b6108ad565b3480156102da57600080fd5b506101d26102e9366004611548565b6003602052600090815260409020546001600160a01b031681565b34801561031057600080fd5b5061022161031f3660046116fb565b60026020526000908152604090205481565b34801561033d57600080fd5b5061020a610982565b34801561035257600080fd5b506007546001600160a01b03166101d2565b34801561037057600080fd5b5061018f6109b8565b34801561038557600080fd5b50610165610394366004611738565b6109c5565b61020a6103a73660046117ca565b610bcb565b3480156103b857600080fd5b5061020a6103c73660046116b2565b610c9f565b3480156103d857600080fd5b5061020a6103e73660046117ff565b610cdc565b3480156103f857600080fd5b5061020a61040736600461183d565b610d48565b34801561041857600080fd5b5061018f610427366004611548565b610e0a565b34801561043857600080fd5b506101656104473660046118a9565b600560209081526000928352604080842090915290825290205460ff1681565b34801561047357600080fd5b5061020a6104823660046115e3565b610f0c565b34801561049357600080fd5b5061020a6104a23660046116fb565b610f48565b60006301ffc9a760e01b6001600160e01b0319831614806104d857506380ac58cd60e01b6001600160e01b03198316145b806104f35750635b5e139f60e01b6001600160e01b03198316145b92915050565b60008054610506906118d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610532906118d7565b801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105d057506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106125760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061067960085490565b905090565b6000818152600360205260409020546001600160a01b038481169116146106d45760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610609565b6001600160a01b03821661071e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610609565b336001600160a01b038416148061074b57506000818152600460205260409020546001600160a01b031633145b8061077957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b6107b65760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610609565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60095460009081906001600160a01b0316610861600a8561193d565b915091509250929050565b6007546001600160a01b031633146108965760405162461bcd60e51b815260040161060990611951565b80516108a990600c90602084019061140a565b5050565b6108b883838361067e565b6001600160a01b0382163b15806109615750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190611986565b6001600160e01b031916145b61097d5760405162461bcd60e51b8152600401610609906119a3565b505050565b6007546001600160a01b031633146109ac5760405162461bcd60e51b815260040161060990611951565b6109b66000610fe3565b565b60018054610506906118d7565b600085600214610a65576000868152600d602052604090205415610a5d576000828060200190518101906109f991906119cd565b6040516bffffffffffffffffffffffff19606089901b166020820152909150600090603401604051602081830303815290604052805190602001209050610a5482600d60008b81526020019081526020016000205483611035565b92505050610bc1565b506001610bc1565b6006546040516362bb919960e11b81526001600160a01b038781166004830152602482018a905263ffffffff89166044830152600092169063c577233290606401602060405180830381865afa158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae79190611a73565b6006549091506000906001600160a01b03163314610b0e57610b098287611a8c565b610b10565b815b9050610b1d816019611aa4565b610b3090683635c9adc5dea00000611aa4565b6040516370a0823160e01b81526001600160a01b0389811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba9190611a73565b1015925050505b9695505050505050565b60008060008060008086806020019051810190610be89190611b08565b955095509550955095509550611b3961ffff1683610c0560085490565b610c0f9190611a8c565b1115610c2e57604051632cdb04a160e21b815260040160405180910390fd5b610c378661104b565b610c458686868686866109c5565b610c6257604051631eb49d6d60e11b815260040160405180910390fd5b60005b83811015610c9557610c7b600880546001019055565b610c8d85610c8860085490565b6110b6565b600101610c65565b5050505050505050565b6007546001600160a01b03163314610cc95760405162461bcd60e51b815260040161060990611951565b80516108a990600b90602084019061140a565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610d5384848461067e565b6001600160a01b0383163b1580610de85750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610d99903390899088908890600401611b8e565b6020604051808303816000875af1158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190611986565b6001600160e01b031916145b610e045760405162461bcd60e51b8152600401610609906119a3565b50505050565b6060610e1560085490565b821115610e3557604051636dac6a0960e01b815260040160405180910390fd5b6000600c8054610e44906118d7565b905011610edb57600b8054610e58906118d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e84906118d7565b8015610ed15780601f10610ea657610100808354040283529160200191610ed1565b820191906000526020600020905b815481529060010190602001808311610eb457829003601f168201915b50505050506104f3565b600c610ee683611182565b604051602001610ef7929190611bdd565b60405160208183030381529060405292915050565b6007546001600160a01b03163314610f365760405162461bcd60e51b815260040161060990611951565b6000918252600d602052604090912055565b6007546001600160a01b03163314610f725760405162461bcd60e51b815260040161060990611951565b6001600160a01b038116610fd75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610609565b610fe081610fe3565b50565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082611042858461128b565b14949350505050565b807f00000000000000000000000000000000000000000000000000000000000000001461108b57604051632eafdb6960e01b815260040160405180910390fd5b6006546001600160a01b03163314610fe0576040516347322d0360e01b815260040160405180910390fd5b6110c082826112ff565b6001600160a01b0382163b15806111665750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611136573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115a9190611986565b6001600160e01b031916145b6108a95760405162461bcd60e51b8152600401610609906119a3565b6060816000036111a95750506040805180820190915260018152600360fc1b602082015290565b8160005b81156111d357806111bd81611c83565b91506111cc9050600a8361193d565b91506111ad565b60008167ffffffffffffffff8111156111ee576111ee611605565b6040519080825280601f01601f191660200182016040528015611218576020820181803683370190505b5090505b84156112835761122d600183611c9c565b915061123a600a86611cb3565b611245906030611a8c565b60f81b81838151811061125a5761125a611cc7565b60200101906001600160f81b031916908160001a90535061127c600a8661193d565b945061121c565b949350505050565b600081815b84518110156112f75760008582815181106112ad576112ad611cc7565b602002602001015190508083116112d357600083815260208290526040902092506112e4565b600081815260208490526040902092505b50806112ef81611c83565b915050611290565b509392505050565b6001600160a01b0382166113495760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610609565b6000818152600360205260409020546001600160a01b03161561139f5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610609565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611416906118d7565b90600052602060002090601f016020900481019282611438576000855561147e565b82601f1061145157805160ff191683800117855561147e565b8280016001018555821561147e579182015b8281111561147e578251825591602001919060010190611463565b5061148a92915061148e565b5090565b5b8082111561148a576000815560010161148f565b6001600160e01b031981168114610fe057600080fd5b6000602082840312156114cb57600080fd5b81356114d6816114a3565b9392505050565b60005b838110156114f85781810151838201526020016114e0565b83811115610e045750506000910152565b600081518084526115218160208601602086016114dd565b601f01601f19169290920160200192915050565b6020815260006114d66020830184611509565b60006020828403121561155a57600080fd5b5035919050565b6001600160a01b0381168114610fe057600080fd5b6000806040838503121561158957600080fd5b823561159481611561565b946020939093013593505050565b6000806000606084860312156115b757600080fd5b83356115c281611561565b925060208401356115d281611561565b929592945050506040919091013590565b600080604083850312156115f657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561164457611644611605565b604052919050565b600067ffffffffffffffff82111561166657611666611605565b50601f01601f191660200190565b60006116876116828461164c565b61161b565b905082815283838301111561169b57600080fd5b828260208301376000602084830101529392505050565b6000602082840312156116c457600080fd5b813567ffffffffffffffff8111156116db57600080fd5b8201601f810184136116ec57600080fd5b61128384823560208401611674565b60006020828403121561170d57600080fd5b81356114d681611561565b600082601f83011261172957600080fd5b6114d683833560208501611674565b60008060008060008060c0878903121561175157600080fd5b8635955060208701359450604087013561176a81611561565b935060608701359250608087013567ffffffffffffffff8082111561178e57600080fd5b61179a8a838b01611718565b935060a08901359150808211156117b057600080fd5b506117bd89828a01611718565b9150509295509295509295565b6000602082840312156117dc57600080fd5b813567ffffffffffffffff8111156117f357600080fd5b61128384828501611718565b6000806040838503121561181257600080fd5b823561181d81611561565b91506020830135801515811461183257600080fd5b809150509250929050565b6000806000806080858703121561185357600080fd5b843561185e81611561565b9350602085013561186e81611561565b925060408501359150606085013567ffffffffffffffff81111561189157600080fd5b61189d87828801611718565b91505092959194509250565b600080604083850312156118bc57600080fd5b82356118c781611561565b9150602083013561183281611561565b600181811c908216806118eb57607f821691505b60208210810361190b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261194c5761194c611911565b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561199857600080fd5b81516114d6816114a3565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b600060208083850312156119e057600080fd5b825167ffffffffffffffff808211156119f857600080fd5b818501915085601f830112611a0c57600080fd5b815181811115611a1e57611a1e611605565b8060051b9150611a2f84830161161b565b8181529183018401918481019088841115611a4957600080fd5b938501935b83851015611a6757845182529385019390850190611a4e565b98975050505050505050565b600060208284031215611a8557600080fd5b5051919050565b60008219821115611a9f57611a9f611927565b500190565b6000816000190483118215151615611abe57611abe611927565b500290565b600082601f830112611ad457600080fd5b8151611ae26116828261164c565b818152846020838601011115611af757600080fd5b6112838260208301602087016114dd565b60008060008060008060c08789031215611b2157600080fd5b86519550602087015194506040870151611b3a81611561565b60608801516080890151919550935067ffffffffffffffff80821115611b5f57600080fd5b611b6b8a838b01611ac3565b935060a0890151915080821115611b8157600080fd5b506117bd89828a01611ac3565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610bc190830184611509565b60008151611bd38185602086016114dd565b9290920192915050565b600080845481600182811c915080831680611bf957607f831692505b60208084108203611c1857634e487b7160e01b86526022600452602486fd5b818015611c2c5760018114611c3d57611c6a565b60ff19861689528489019650611c6a565b60008b81526020902060005b86811015611c625781548b820152908501908301611c49565b505084890196505b505050505050611c7a8185611bc1565b95945050505050565b600060018201611c9557611c95611927565b5060010190565b600082821015611cae57611cae611927565b500390565b600082611cc257611cc2611911565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bb9a24252cb24c405ed335984df203c9c24d217af5181aabbb55d0549b383d2964736f6c634300080d0033";

type SliceV1DropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SliceV1DropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SliceV1Drop__factory extends ContractFactory {
  constructor(...args: SliceV1DropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SliceV1Drop";
  }

  deploy(
    name_: string,
    symbol_: string,
    slxAddress_: string,
    sliceCoreAddress_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SliceV1Drop> {
    return super.deploy(
      name_,
      symbol_,
      slxAddress_,
      sliceCoreAddress_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    ) as Promise<SliceV1Drop>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    slxAddress_: string,
    sliceCoreAddress_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      slxAddress_,
      sliceCoreAddress_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    );
  }
  attach(address: string): SliceV1Drop {
    return super.attach(address) as SliceV1Drop;
  }
  connect(signer: Signer): SliceV1Drop__factory {
    return super.connect(signer) as SliceV1Drop__factory;
  }
  static readonly contractName: "SliceV1Drop";
  public readonly contractName: "SliceV1Drop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SliceV1DropInterface {
    return new utils.Interface(_abi) as SliceV1DropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SliceV1Drop {
    return new Contract(address, _abi, signerOrProvider) as SliceV1Drop;
  }
}
